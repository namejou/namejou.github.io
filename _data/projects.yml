- title: Predictive Modeling in Competitive Gaming (League of Legends)
  description: >
    Focus: Machine Learning – Predictive Analytics with XGBoost
  skills:
    - Python
    - XGBoost
    - Machine Learning
    - Data Analysis
    - GridSearch
    - ROC AUC
  image: /assets/img/projects/lol_project.png
  links:
    - label: Voir sur GitHub
      url: https://github.com/namejou/PredictiveGaming_SDA2025
      badge: https://img.shields.io/badge/GitHub-View_on_GitHub-blue?logo=GitHub
    - label: Dataset Kaggle
      url: https://www.kaggle.com/datasets/gyejr95/league-of-legends-challenger-ranked-games2020/data
      badge: https://img.shields.io/badge/KAGGLE-DATASET-blue
    - label: Slide PDF  
      url: https://github.com/namejou/PredictiveGaming_SDA2025/blob/main/Pr%C3%A9sentation%20ML%20-%20MaeLouis_NadiaMedjdoub_MaximeEneau_KarimAmeur.ipynb.pdf  
      badge: https://img.shields.io/badge/PDF-View%20Slides%20PDF-red?logo=adobe-acrobat-reader

  summary: >
   As part of our Master's program in Data Analytics at Sorbonne University, our team carried out a predictive modeling project focused on ranked matches in League of Legends. Using a dataset of over 190,000 matches from the highest competitive tiers (Master, GrandMaster, Challenger), we built machine learning models to identify which gameplay factors most strongly influence match outcomes.

   We applied XGBoost, optimized via GridSearch, to train separate models for each skill tier. After extensive data cleaning and feature selection, our models achieved over 97% accuracy. The analysis revealed that structural objectives (like towers and inhibitors) are the most reliable predictors of victory. We also found meaningful strategic differences between tiers and confirmed overall game balance between the red and blue teams.

   This project demonstrates our ability to design end-to-end predictive pipelines, conduct strategic data analysis, and draw actionable insights from large-scale competitive gaming data.

- title: Traffic Sign Recognition with Deep Learning
  description: >
    Deep learning project for autonomous driving systems. Built a CNN-based model trained on the GTSRB dataset, achieving 99.87% accuracy using the Swish activation function.
  skills:
    – Python  
    – TensorFlow / Keras  
    – OpenCV  
    – NumPy, Pandas  
    – Matplotlib, Seaborn  
    – Scikit-learn 
  image: /assets/img/projects/dl_signalisation2.png
  links:
    - label: Voir sur GitHub
      url: https://github.com/namejou/TrafficSign_Detection_SDA2025
      badge: https://img.shields.io/badge/GitHub-View_on_GitHub-blue?logo=GitHub
    - label: Dataset Kaggle
      url: https://www.kaggle.com/datasets/meowmeowmeowmeowmeow/gtsrb-german-traffic-sign
      badge: https://img.shields.io/badge/KAGGLE-DATASET-blue
    - label: Slide PDF  
      url: https://github.com/namejou/TrafficSign_Detection_SDA2025/blob/main/Presentation%20Projet%20DL%20-%20Nadia%20-%20Karim.pdf  
      badge: https://img.shields.io/badge/PDF-View%20Slides%20PDF-red?logo=adobe-acrobat-reader
    - label: Report pdf  
      url: https://github.com/namejou/TrafficSign_Detection_SDA2025/blob/main/Rapport%20Projet%20DL%20-%20Nadia%20-%20Karim.pdf
      badge: https://img.shields.io/badge/Report-PDF-red
  summary: >
   In this project, we explored the use of Convolutional Neural Networks (CNNs) to classify traffic signs for autonomous driving systems. Using the German Traffic Sign Recognition Benchmark (GTSRB) dataset, which contains more than 50,000 labeled images across 43 categories, our goal was to build a model capable of understanding real-world traffic scenarios with near-human precision.

   We started with a baseline CNN architecture using ReLU activation and progressively improved its performance through Batch Normalization, Dropout, and Global Average Pooling. Finally, by introducing the Swish activation function, the model achieved an outstanding 99.87% accuracy on the test set.

   Beyond simple classification, we designed a two-stage system:
   - A binary CNN to detect whether an image contains a traffic sign or not.
   - A multi-class CNN to identify the specific sign category.

   This hybrid approach enhances robustness in diverse environments and reduces false detections — a crucial step toward safer autonomous driving.

   Our work demonstrates how careful optimization of neural network architectures, combined with data augmentation and activation function tuning, can yield highly reliable models for computer vision applications in intelligent transportation systems.
